xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
for (i in 1 : 1000) data[1000 + i, "zz"] <- 40**0.5*(averages[i]-
5)/thrVar**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
for (i in 1 : 1000) data[1000 + i, "zz"] <- 40**0.5*(averages[i]-
5)/5**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
averages <- NULL
for (i in 1 : 1000) averages <- c(averages, mean(rexp(400, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 40**0.5*(averages[i]-
5)/5**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
averages <- NULL
for (i in 1 : 1000) averages <- c(averages, mean(rexp(4000, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 40**0.5*(averages[i]-
5)/5**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
for (i in 1 : 1000) averages <- c(averages, mean(rexp(4000, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 4000**0.5*(averages[i]-
5)/5**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
averages <- NULL
for (i in 1 : 1000) averages <- c(averages, mean(rexp(400, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 400**0.5*(averages[i]-
5)/5**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
averages <- NULL
for (i in 1 : 1000) averages <- c(averages, mean(rexp(40, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 40**0.5*(averages[i]-
5)/5**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
averages = NULL
for (i in 1 : 1000) averages <- c(averages, mean(rexp(40, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 40**0.5*(averages[i]-
5)/5**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
for (i in 1 : 1000) averages <- c(averages, mean(rexp(400, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 400**0.5*(averages[i]-
5)/5**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
averages = NULL
for (i in 1 : 1000) averages <- c(averages, mean(rexp(400, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 400**0.5*(averages[i]-
5)/5**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
averages = NULL
for (i in 1 : 1000) averages <- c(averages, mean(rexp(4000, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 4000**0.5*(averages[i]-
5)/5**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
averages = NULL
for (i in 1 : 1000) averages <- c(averages, mean(rexp(10000, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 10000**0.5*(averages[i]-
5)/5**0.5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
averages = NULL
for (i in 1 : 1000) averages <- c(averages, mean(rexp(40, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 40**0.5*(averages[i]-
5)/5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
averages = NULL
for (i in 1 : 1000) averages <- c(averages, mean(rexp(400, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 400**0.5*(averages[i] - 5)/5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
for (i in 1 : 1000) data[1000 + i, "zz"] <- 40**0.5*(averages[i] - 5)/5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
averages = NULL
for (i in 1 : 1000) averages <- c(averages, mean(rexp(40, 0.2)))
for (i in 1 : 1000) data[1000 + i, "zz"] <- 40**0.5*(averages[i] - 5)/5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm)
for (i in 1 : 1000) data[1000 + i, "zz"] <- 40**0.5*(averages[i] - 5)/5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm, colour = "orange")
for (i in 1 : 1000) data[1000 + i, "zz"] <- 40**0.5*(averages[i] - 5)/5
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm, colour = "red")
ggplot(data,aes(x=zz)) +
geom_histogram(data=subset(data ,yy == 'b'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'b'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm, colour = "red") +
geom_histogram(data=subset(data ,yy == 'a'), fill = "white",
binwidth = 1, colour = "black", aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'a'), fill = "darkgreen",
alpha = 0.2, colour = "darkgreen")
for (i in 1 : 1000) data[2000 + i, "xx"] <- c(40**0.5*(averages[i] - 5)/5,"c")
for (i in 1 : 1000) data[2000 + i, ] <- c(40**0.5*(averages[i] - 5)/5,"c")
data <- data.frame(xx = c(exponentials, averages), yy = rep(letters[1:2],
each = 1000))
for (i in 1 : 1000) data[2000 + i, ] <- c(40**0.5*(averages[i] - 5)/5,"c")
nrow(data)
tail(data)
warnings()
for (i in 1 : 1000) data[2000 + i, ] <- c(40**0.5*(averages[i] - 5)/5,
as.factor("c"))
warnings()
data <- data.frame(xx = c(exponentials, averages), yy = rep(letters[1:3],
each = 1000))
data <- data.frame(xx = c(exponentials, averages, 1:1000),
yy = rep(letters[1:3], each = 1000))
for (i in 1 : 1000) data[2000 + i, "xx"] <- 40**0.5*(averages[i] - 5)/5
tail(data)
ggplot(data,aes(x=xx)) +
geom_histogram(data=subset(data ,yy == 'c'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_density(data=subset(data ,yy == 'c'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm, colour = "red") +
geom_histogram(data=subset(data ,yy == 'a'), fill = "white",
binwidth = 1, colour = "black", aes(y = ..density..))+
geom_density(data=subset(data ,yy == 'a'), fill = "darkgreen",
alpha = 0.2, colour = "darkgreen")
ggplot(data,aes(x=xx)) +
geom_histogram(data=subset(data ,yy == 'c'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_histogram(data=subset(data ,yy == 'a'), fill = "white",
binwidth = 1, colour = "black", aes(y = ..density..))+
geom_density(data=subset(data ,yy == 'c'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
stat_function(fun = dnorm, colour = "red") +
geom_density(data=subset(data ,yy == 'a'), fill = "darkgreen",
alpha = 0.2, colour = "darkgreen")
ggplot(data,aes(x=xx)) +
geom_histogram(data=subset(data ,yy == 'c'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_histogram(data=subset(data ,yy == 'a'), fill = "white",
binwidth = 1, colour = "black", aes(y = ..density..))+
geom_density(data=subset(data ,yy == 'c'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
geom_density(data=subset(data ,yy == 'a'), fill = "darkgreen",
alpha = 0.2, colour = "darkgreen") +
stat_function(fun = dnorm, colour = "red")
data <- data.frame(xx = c(exponentials, averages, 1:2000),
yy = rep(letters[1:4], each = 1000))
for (i in 1 : 1000) {
data[2000 + i, "xx"] <- 40**0.5*(exponentials[i] - 5)/5
data[3000 + i, "xx"] <- 40**0.5*(averages[i] - 5)/5
}
ggplot(data,aes(x=xx)) +
geom_histogram(data=subset(data ,yy == 'c'), fill = "white",
binwidth = 1, colour = "black",aes(y = ..density..)) +
geom_histogram(data=subset(data ,yy == 'd'), fill = "white",
binwidth = 1, colour = "black", aes(y = ..density..))+
geom_density(data=subset(data ,yy == 'c'), fill = "darkblue",
alpha = 0.2, colour = "darkblue") +
xlab("Value") + ylab("Frequency") +
geom_density(data=subset(data ,yy == 'd'), fill = "darkgreen",
alpha = 0.2, colour = "darkgreen") +
stat_function(fun = dnorm, colour = "red")
data <- read.csv("C:\R\repdata-data-StormData.csv\repdata-data-StormData.csv")
data <- read.csv("C:/R/repdata-data-StormData.csv/repdata-data-StormData.csv")
head(data)
class(data$EVTYPE)
data$EVTYPE
nrow(data)
head(data)
tail(data)
?aggreagate
?agreagate
?aggregate
fata <- aggregate(fatalities ~ EVTYPE, data = data, fum = sum)
fata <- aggregate(FATALITIES ~ EVTYPE, data = data, fum = sum)
fata <- aggregate(FATALITIES ~ EVTYPE, data = data, fun = sum)
fata <- aggregate(FATALITIES ~ EVTYPE, data = data, FUN = sum)
head(fata)
tail(fata)
sum(fata$FATALITIES)
sum(data$FATALITIES)
harm <- aggregate(FATALITIES + INJURES ~ EVTYPE, data = data, FUN = sum)
harm <- aggregate(FATALITIES + INJURIES ~ EVTYPE, data = data, FUN = sum)
head(harm)
fat <- aggregate(FATALITIES ~ EVTYPE, data = data, fun = sum)
inj <- aggregate(INJURIES ~ EVTYPE, data = data, fun = sum)
fat <- aggregate(FATALITIES ~ EVTYPE, data = data, FUN = sum)
inj <- aggregate(INJURIES ~ EVTYPE, data = data, FUN = sum)
sum(inj$INJURIES)
sum(fat$FATALITIES)
fatMean <- aggregate(FATALITIES ~ EVTYPE, data = data, FUN = mean)
injMean <- aggregate(INJURIES ~ EVTYPE, data = data, FUN = mean)
head(fatMean)
tail(fatMean)
head(injMean)
tail(injMean)
max(fatMean)
max(fatMean$FATALITIES)
max(inj$INJURIES)
sort(fatMean)
sort(fatMean$FATALITIES)
fatMean$FATALITIES <- order(fatMean$FATALITIES, desc = FALSE)
?order
fatMean$FATALITIES <- order(fatMean$FATALITIES, decr = TRUE)
fatMean$FATALITIES <- order(fatMean$FATALITIES, decreasing = TRUE)
head(fatMean$FATALITIES)
fatMean <- aggregate(FATALITIES ~ EVTYPE, data = data, FUN = mean)
library(ggplt2)
library(ggplot2)
fatMean <- aggregate(FATALITIES ~ EVTYPE, data = data, FUN = mean)
injMean <- aggregate(INJURIES ~ EVTYPE, data = data, FUN = mean)
harm <- data.frame(EVTYPE = fatMean$EVTYPE, FAT_MEAN = fatMean$FATALITIES,
INJ_MEAN = injMean$INJURIES)
harmNonZero <- harm[harm$FAT_MEAN!=0 or INJ_MEAN!=0,]
harmNonZero <- harm[harm$FAT_MEAN!=0 or harm$INJ_MEAN!=0,]
harmNonZero <- harm[harm$FAT_MEAN!=0 | harm$INJ_MEAN!=0,]
nrow(harmNonZero)
nrow(harm)
head(harmNonZero)
damage <- data.frame(EVTYPE = c(harm$EVTYPE, harm$EVTYPE),
DAMAGE_TYPE = c(rep(FATALITY, lentgh(harm$EVTYPE)),
rep(INJURY, lentgh(harm$EVTYPE))),
DAMAGE_MEAN = c(FAT_MEAN, INJ_MEAN))
damage <- data.frame(EVTYPE = c(harm$EVTYPE, harm$EVTYPE),
DAMAGE_TYPE = c(rep(as.factor(FATALITY),
lentgh(harm$EVTYPE)),
rep(as.factor(INJURY),
lentgh(harm$EVTYPE))),
DAMAGE_MEAN = c(FAT_MEAN, INJ_MEAN))
damage <- data.frame(EVTYPE = c(harm$EVTYPE, harm$EVTYPE),
DAMAGE_TYPE = c(rep(as.factor("FATALITY"),
lentgh(harm$EVTYPE)),
rep(as.factor("INJURY"),
lentgh(harm$EVTYPE))),
DAMAGE_MEAN = c(FAT_MEAN, INJ_MEAN))
damage <- data.frame(EVTYPE = c(harm$EVTYPE, harm$EVTYPE),
DAMAGE_TYPE = c(rep(as.factor("FATALITY"),
length(harm$EVTYPE)),
rep(as.factor("INJURY"),
length(harm$EVTYPE))),
DAMAGE_MEAN = c(FAT_MEAN, INJ_MEAN))
damage <- data.frame(EVTYPE = c(harm$EVTYPE, harm$EVTYPE),
DAMAGE_TYPE = c(rep(as.factor("FATALITY"),
length(harm$EVTYPE)),
rep(as.factor("INJURY"),
length(harm$EVTYPE))),
DAMAGE_MEAN = c(harm$FAT_MEAN, harm$INJ_MEAN))
nrow(harm)
nrow(damage)
head(damage)
damage <- data.frame(EVTYPE = c(harm$EVTYPE, harm$EVTYPE),
DAMAGE_TYPE = c(rep(as.factor(1),
length(harm$EVTYPE)),
rep(as.factor(2),
length(harm$EVTYPE))),
DAMAGE_MEAN = c(harm$FAT_MEAN, harm$INJ_MEAN))
damage <- data.frame(EVTYPE = rep(harm$EVTYPE, 2),
DAMAGE_TYPE = c(rep(as.factor(1),
length(harm$EVTYPE)),
rep(as.factor(2),
length(harm$EVTYPE))),
DAMAGE_MEAN = c(harm$FAT_MEAN, harm$INJ_MEAN))
head(damage)
nrow(damage)
harm <- data.frame(EVTYPE = rep(fatMean$EVTYPE, 2),
DAMAGE_TYPE = c(rep(as.factor(1),
length(fatMean$EVTYPE)),
rep(as.factor(2),
length(fatMean$EVTYPE))),
DAMAGE_MEAN = c(fatMean$FATALITIES, injMean$INJURIES))
nrow(harm)
head(harm)
ggplot(harmNonZero, aes(EVTYPE,DAMAGE_MEAN)) + geom_point()
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN)) + geom_point()
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) + geom_point()
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN)) +
geom_point() +
geom_point(aes(colour=factor(DAMAGE_TYPE)))
tail(harm)
harm <- data.frame(EVTYPE = rep(fatMean$EVTYPE, 2),
DAMAGE_TYPE = c(rep(1,
length(fatMean$EVTYPE)),
rep(2,
length(fatMean$EVTYPE))),
DAMAGE_MEAN = c(fatMean$FATALITIES, injMean$INJURIES))
tail(harm)
?factor
class(harm$DAMAGE_TYPE) <- sa.factor()
class(harm$DAMAGE_TYPE) <- factor()
class(harm$DAMAGE_TYPE) <- "factor"
harm$DAMAGE_TYPE <- as.factor(harm$DAMAGE_TYPE)
tail(harm)
head(harm)
levels(harm$DAMAGE_TYPE) <- c(FATALITY, INJURY)
levels(harm$DAMAGE_TYPE) <- c("FATALITY", "INJURY")
head(harm)
tail(harm)
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN)) +
geom_point() +
geom_point(aes(colour=factor(DAMAGE_TYPE)))
?geom_point
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN)) +
geom_point() +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.5)
?geom_point
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN)) +
geom_point() +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.2)
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN)) +
geom_point() +
geom_point(aes(colour=factor(DAMAGE_TYPE)))
?geom_point
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN)) +
geom_point() +
geom_point(aes(colour=factor(DAMAGE_TYPE), alpha = 0.5))
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN)) +
geom_point() +
geom_point(aes(colour=factor(DAMAGE_TYPE)))
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.5)
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_density(data=subset(harm, DAMAGE_TYPE == 'FATALITY'),
alpha = 0.8, colour = "blue")
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_density(data=harm[harm$DAMAGE_TYPE == 'FATALITY',"DAMAGE_MEAN"]),
alpha = 0.8, colour = "blue")
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_density(data=harm[harm$DAMAGE_TYPE == 'FATALITY',"DAMAGE_MEAN"],
alpha = 0.8, colour = "blue")
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_smooth(se = FALSE)
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_smooth(se = FALSE, aes(group = 1))
?geom
_smooth
?geom_smooth
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_smooth(data = subset(harm, DAMAGE_TYPE == "FATALITY"), se = FALSE)
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_smooth(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8, se = FALSE)
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_line(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8, se = FALSE)
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_abline(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8, se = FALSE)
?geom_line
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_line(aes(group = factor (DAMAGE_TYPE),colour=factor(DAMAGE_TYPE)), alpha = 0.8)
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_smooth(aes(group = factor (DAMAGE_TYPE),colour=factor(DAMAGE_TYPE)), alpha = 0.8)
ggplot(harm, aes(EVTYPE,DAMAGE_MEAN, DAMAGE_TYPE)) +
geom_point(aes(colour=factor(DAMAGE_TYPE)), alpha = 0.8) +
geom_line(aes(group = factor (DAMAGE_TYPE),colour=factor(DAMAGE_TYPE)), alpha = 0.8)
library(kernlab)
data(spam)
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1,]
testSpam = spam[trainIndicator == 0,]
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam[, 1:4] + 1))
hCluster = hclust(dist(t(trainSpam[, 1:57])))
plot(hCluster)
hClusterUpdated = hclust(dist(t(log10(trainSpam[, 1:55] + 1))))
plot(hClusterUpdated)
library(boot)
trainSpam$numType = as.numeric(trainSpam$type) - 1
costFunction = function(x, y) sum(x != (y > 0.5))
cvError = rep(NA, 55)
library(boot)
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
##Which predictor has minimum cross-validated error?
names(trainSpam)[which.min(cvError)]
##Use the best model from the group
predictionModel = glm(numType ~ charDollar, family = "binomial", data = trainSpam)
##Get predictions on the test set
predictionTest = predict(predictionModel, restSpam)
predictedSpam = rep("nonspam", dim(testSpam)[1])
##Classify as "spam" for those with prob > 0.5
predictedSpam[predictionModel$fitted > 0.5] = "spam"
##Classification table
table(predictedSpam, testSpam$type)
##Error rate
(61 + 458)/(1346 + 458 + 61 + 449)
?knitr
?knit
library(knitr)
knit('PA1_template.Rmd')
getwd()
setwd("C:\Documents and Settings\Buzaza\Reproducible-Research-PA1")
setwd("C:/Documents and Settings/Buzaza/Reproducible-Research-PA1")
knit('PA1_template.Rmd')
knit('PA1_template.Rmd')
knit('PA1_template.Rmd')
?par
knit('PA1_template.Rmd')
